{"version":3,"sources":["components/Editor.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","useState","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","lang","setLang","useEffect","name","id","val","target","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAQe,SAASA,EAAOC,GAAQ,IAEnCC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAKF,OACE,yBAAKC,UAAS,YACZ,yBAAKA,UAAU,SACZH,GAEH,kBAAC,aAAD,CACEI,eATN,SAAsBC,EAAQC,EAAML,GAClCC,EAASD,IASLA,MAAOA,EACPE,UAAU,UACVI,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMX,EACNY,MAAO,WACPC,aAAa,MCsCRC,MAnEf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAESF,mBAAS,IAFlB,mBAENG,EAFM,KAEDC,EAFC,OAGOJ,mBAAS,IAHhB,mBAGNK,EAHM,KAGFC,EAHE,OAIeN,mBAAS,IAJxB,mBAINO,EAJM,KAIEC,EAJF,OAKQR,mBAAS,QALjB,mBAKNS,EALM,KAKDC,EALC,KAoBb,OAbAC,qBAAU,WACNH,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOV,CAACJ,EAAME,EAAKE,EAAGI,IAMhB,oCACE,yBAAKpB,UAAU,YACjB,4BAAQA,UAAU,OAAOuB,KAAK,aAAaC,GAAG,aAAa1B,MAAOsB,EAC5DrB,SAAY,SAAC0B,GANnBJ,EAMsCI,EANxBC,OAAO5B,SAKrB,QAED,4BAEOA,MAAM,QAFb,QAGS,4BACFA,MAAM,OADJ,OAGD,4BACDA,MAAM,MADL,eAGK,SAAPsB,EAAgB,kBAAC1B,EAAD,CACfE,SAAS,MACTC,YAAY,OACZC,MAAOc,EACPb,SAAU,SAAC0B,GAAD,OAAOZ,EAAQY,MACxB,KACK,QAAPL,GAAgB,kBAAC1B,EAAD,CACfE,SAAS,MACTC,YAAY,MACZC,MAAOgB,EACPf,SAAU,SAAC0B,GAAD,OAAOV,EAAOU,MAElB,OAAPL,GAAe,kBAAC1B,EAAD,CACdE,SAAS,aACTC,YAAY,aACZC,MAAOkB,EACPjB,SAAU,SAAC0B,GAAD,OAAOR,EAAMQ,OAGjC,yBAAKzB,UAAU,QACP,4BACCA,UAAU,QACTkB,OAAQA,EACRS,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,MACNC,OAAO,WC3DjBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.30ada7f7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\n\nexport default function Editor(props) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props\n  function handleChange(editor, data, value) {\n    onChange(value)\n  }\n  return (\n    <div className={`edit_con`}>\n      <div className=\"title\">\n        {displayName}\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: 'material',\n          lineNumbers: true\n        }}\n      />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor'\n\nfunction App() {\n  const [html, setHtml] = useState('')\n  const [css, setCss] = useState('')\n  const [js, setJs] = useState('')\n  const [srcDoc, setSrcDoc] = useState('')\n  const [lang,setLang]=useState('html')\n\n  useEffect(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `)\n  }, [html, css, js,lang])\n  function handleChange(event)\n  {\n    setLang(event.target.value)\n  }\n  return (\n    <>\n      <div className=\"edit top\">\n    <select className=\"drop\" name=\"selectList\" id=\"selectList\" value={lang}\n          onChange = {(val)=>handleChange(val)}>\n Â  <option  \n          \n          value=\"html\">HTML</option>\n            <option  \n          value=\"css\">\n            CSS</option>\n           <option  \n          value=\"js\">JAVASCRIPT</option>\n</select>\n        {lang==='html' ? <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={(val)=>setHtml(val)}\n        />:null}\n        {lang==='css' && <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={(val)=>setCss(val)}\n        />}\n        {lang==='js' && <Editor\n          language=\"javascript\"\n          displayName=\"JAVASCRIPT\"\n          value={js}\n          onChange={(val)=>setJs(val)}\n        />}\n</div>\n<div className=\"edit\">\n        <iframe\n         className=\"frame\"\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"90%\"\n          height=\"90%\"\n        />\n      </div>\n    </>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}